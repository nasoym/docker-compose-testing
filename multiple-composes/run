#!/usr/bin/env bash

set -eufo pipefail
trap 'echo "$0: line ${LINENO}: exiting because of error";exit 1' ERR


if [[ "$#" -eq 0 ]];then
  :

elif [[ "$1" == "up" ]];then shift
  docker network create foo
  docker run -d --name foo_bss --network foo nasoym/bss_docker
  ( cd a ; port_prefix=80 docker-compose up -d --remove-orphans )
  ( cd b ; port_prefix=90 docker-compose up -d --remove-orphans )

elif [[ "$1" == "test" ]];then shift
  echo -n "foo_bss ip: "
  docker exec -it foo_bss  hostname -i
  
  echo -n "a_service1_1 ip: "
  docker exec -it a_service1_1 hostname -i
  echo -n "a_service2_1 ip: "
  docker exec -it a_service2_1 hostname -i

  echo -n "b_service1_1 ip: "
  docker exec -it b_service1_1 hostname -i
  echo -n "b_service2_1 ip: "
  docker exec -it b_service2_1 hostname -i

  echo "---------------------"

  echo -n "a_service1_1 -> foo_bss: "
  docker exec -it a_service1_1 getent hosts foo_bss
  echo -n "a_service1_1 -> service2: "
  docker exec -it a_service1_1 getent hosts service2
  echo -n "a_service2_1 -> service1: "
  docker exec -it a_service2_1 getent hosts service1

  echo -n "b_service1_1 -> foo_bss: "
  docker exec -it b_service1_1 getent hosts foo_bss
  echo -n "b_service1_1 -> service2: "
  docker exec -it b_service1_1 getent hosts service2
  echo -n "b_service2_1 -> service1: "
  docker exec -it b_service2_1 getent hosts service1


elif [[ "$1" == "down" ]];then shift
  ( cd a ; docker-compose down -v --remove-orphans )
  ( cd b ; docker-compose down -v --remove-orphans )
  docker rm -vf foo_bss
  docker network rm foo

else
  echo "unknown command: $@" >&2
  exit 1

fi

